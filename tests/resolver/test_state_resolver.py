from collections import defaultdict
import logging
from pprint import pprint
import re
from textwrap import dedent
import yaml

from pyfw.parsing import parse_iptables_save
from pyfw.resolver.state import determine_desired_chain_rules
from pyfw.resolver.state import determine_desired_state
from pyfw.util import pretty_yaml_dump


logger = logging.getLogger(__name__)


def _load_wishes(s):
    return yaml.safe_load(s)['pyfw_wishes']


def _load_state(s):
    return yaml.safe_load(s)['pyfw_state']


def test_determine_desired_chain_rules():
    sample_iptables_save = dedent('''
        # Generated by iptables-save v1.4.21 on Tue Jan 10 15:48:13 2017
        *nat
        :PREROUTING ACCEPT [4:796]
        :INPUT ACCEPT [0:0]
        :OUTPUT ACCEPT [0:0]
        :POSTROUTING ACCEPT [0:0]
        :DOCKER - [0:0]
        -A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
        -A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
        -A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
        -A POSTROUTING -s 172.17.0.2/32 -d 172.17.0.2/32 -p tcp -m tcp --dport 80 -j MASQUERADE
        -A DOCKER -i docker0 -j RETURN
        -A DOCKER ! -i docker0 -p tcp -m tcp --dport 80 -j DNAT --to-destination 172.17.0.2:80
        COMMIT
        # Completed on Tue Jan 10 15:48:13 2017
        # Generated by iptables-save v1.4.21 on Tue Jan 10 15:48:13 2017
        *filter
        :INPUT ACCEPT [889:47280]
        :FORWARD ACCEPT [0:0]
        :OUTPUT ACCEPT [957:99168]
        :DOCKER - [0:0]
        :DOCKER-ISOLATION - [0:0]
        -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
        -A INPUT -p tcp -m tcp --dport 443 -m comment --comment https -j ACCEPT
        -A FORWARD -j DOCKER-ISOLATION
        -A FORWARD -o docker0 -j DOCKER
        -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
        -A FORWARD -i docker0 -o docker0 -j ACCEPT
        -A FORWARD -d 192.168.122.0/24 -o virbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        -A FORWARD -s 192.168.122.0/24 -i virbr0 -j ACCEPT
        -A FORWARD -i virbr0 -o virbr0 -j ACCEPT
        -A FORWARD -o virbr0 -j REJECT --reject-with icmp-port-unreachable
        -A FORWARD -i virbr0 -j REJECT --reject-with icmp-port-unreachable
        -A FORWARD -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
        -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
        -A DOCKER -d 172.17.0.2/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport 80 -j ACCEPT
        -A DOCKER-ISOLATION -j RETURN
        COMMIT
        # Completed on Tue Jan 10 15:48:13 2017
    ''')
    sample_wishes = _load_wishes('''
    pyfw_wishes:
        iptables:
            filter:
                FORWARD:
                    rules:
                    - allow_established: -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
                    - allow_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
                    - reject_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable
                    - ~match: virbr0|192\.168\.122\.
                    - ~match: docker0|DOCKER
    ''')

    tables = parse_iptables_save(sample_iptables_save)
    chain_state_rules = tables['filter']['FORWARD']['rules']
    chain_rule_wishes = sample_wishes['iptables']['filter']['FORWARD']['rules']
    chain_desired_rules = determine_desired_chain_rules(chain_state_rules, chain_rule_wishes)
    assert chain_desired_rules == [
        '-m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT',
        '-o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT',
        '-o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable',
        '-d 192.168.122.0/24 -o virbr0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT',
        '-s 192.168.122.0/24 -i virbr0 -j ACCEPT',
        '-i virbr0 -o virbr0 -j ACCEPT',
        '-o virbr0 -j REJECT --reject-with icmp-port-unreachable',
        '-i virbr0 -j REJECT --reject-with icmp-port-unreachable',
        '-j DOCKER-ISOLATION',
        '-o docker0 -j DOCKER',
        '-o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT',
        '-i docker0 ! -o docker0 -j ACCEPT',
        '-i docker0 -o docker0 -j ACCEPT',
    ]


def test_determine_desired_state():
    sample_state = _load_state('''
    pyfw_state:
        ip6tables:
            filter:
                FORWARD:
                    default_action: ACCEPT
                    rules: []
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
        ipsets: {}
        iptables:
            filter:
                DOCKER:
                    default_action: '-'
                    rules: []
                DOCKER-ISOLATION:
                    default_action: '-'
                    rules:
                    - -j RETURN
                FORWARD:
                    default_action: DROP
                    rules:
                    - -j DOCKER-ISOLATION
                    - -o docker0 -j DOCKER
                    - -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
                    - -i docker0 ! -o docker0 -j ACCEPT
                    - -i docker0 -o docker0 -j ACCEPT
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
    ''')
    sample_wishes = _load_wishes('''
    pyfw_wishes:
        iptables:
            filter:
                FORWARD:
                    rules:
                    - allow_established: -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
                    - allow_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
                    - reject_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable
                    - ~match: virbr0|192\.168\.122\.
                    - ~match: docker0|DOCKER
                    - last: -m comment --comment last -j ACCEPT
    ''')
    desired_state = determine_desired_state(sample_state, sample_wishes)
    print(pretty_yaml_dump(desired_state))
    expected_desired_state = yaml.load(dedent('''
        ip6tables:
            filter:
                FORWARD:
                    default_action: ACCEPT
                    rules: []
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
        ipsets: {}
        iptables:
            filter:
                DOCKER:
                    default_action: '-'
                    rules: []
                DOCKER-ISOLATION:
                    default_action: '-'
                    rules:
                    - -j RETURN
                FORWARD:
                    default_action: DROP
                    rules:
                    - -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
                    - -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
                    - -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable
                    - -j DOCKER-ISOLATION
                    - -o docker0 -j DOCKER
                    - -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
                    - -i docker0 ! -o docker0 -j ACCEPT
                    - -i docker0 -o docker0 -j ACCEPT
                    - -m comment --comment last -j ACCEPT
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
    '''))
    assert desired_state == expected_desired_state


def test_determine_desired_state_empty_sample_state():
    sample_state = _load_state('''
    pyfw_state:
        ip6tables:
            filter:
                FORWARD:
                    default_action: ACCEPT
                    rules: []
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
        ipsets: {}
        iptables:
            filter:
                FORWARD:
                    default_action: DROP
                    rules: []
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
    ''')
    sample_wishes = _load_wishes('''
    pyfw_wishes:
        iptables:
            filter:
                FORWARD:
                    rules:
                    - allow_established: -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
                    - allow_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
                    - reject_vm_fwd: -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable
                    - ~match: virbr0|192\.168\.122\.
                    - ~match: docker0|DOCKER
                    - last: -m comment --comment last -j ACCEPT
    ''')
    desired_state = determine_desired_state(sample_state, sample_wishes)
    print(pretty_yaml_dump(desired_state))
    expected_desired_state = yaml.load(dedent('''
        ip6tables:
            filter:
                FORWARD:
                    default_action: ACCEPT
                    rules: []
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
        ipsets: {}
        iptables:
            filter:
                FORWARD:
                    default_action: DROP
                    rules:
                    - -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment allow_established -j ACCEPT
                    - -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set --match-set fwd_allowed_src_hosts src -m comment --comment allow_vm_fwd -j ACCEPT
                    - -o virbr0 -p tcp -m set --match-set fwd_allowed_dst_ports dst -m set ! --match-set fwd_allowed_src_hosts src -m conntrack ! --ctstate RELATED,ESTABLISHED -m comment --comment reject_vm_fwd -j REJECT --reject-with icmp-port-unreachable
                    - -m comment --comment last -j ACCEPT
                INPUT:
                    default_action: ACCEPT
                    rules: []
                OUTPUT:
                    default_action: ACCEPT
                    rules: []
    '''))
    assert desired_state == expected_desired_state
